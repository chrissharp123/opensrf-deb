.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "OpenSRF::DomainObject::oilsMessage 3pm"
.TH OpenSRF::DomainObject::oilsMessage 3pm "2013-03-15" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
OpenSRF::DomainObject::oilsMessage
.SH ""
.IX Header ""
use OpenSRF::DomainObject::oilsMessage;
.PP
my \f(CW$msg\fR = OpenSRF::DomainObject::oilsMessage\->new( type => '\s-1CONNECT\s0' );
.PP
\&\f(CW$msg\fR\->payload( \f(CW$domain_object\fR );
.SH "ABSTRACT"
.IX Header "ABSTRACT"
OpenSRF::DomainObject::oilsMessage is used internally to wrap data sent
between client and server.  It provides the structure needed to authenticate
session data, and also provides the logic needed to unwrap session data and 
pass this information along to the Application Layer.
.SH "METHODS"
.IX Header "METHODS"
.SS "OpenSRF::DomainObject::oilsMessage\->type( [$new_type] )"
.IX Subsection "OpenSRF::DomainObject::oilsMessage->type( [$new_type] )"
.RS 4
Used to specify the type of message.  One of
\&\fB\s-1CONNECT\s0, \s-1REQUEST\s0, \s-1RESULT\s0, \s-1STATUS\s0, \s-1ERROR\s0, or \s-1DISCONNECT\s0\fR.
.RE
.SS "OpenSRF::DomainObject::oilsMessage\->api_level( [$new_api_level] )"
.IX Subsection "OpenSRF::DomainObject::oilsMessage->api_level( [$new_api_level] )"
.RS 4
Used to specify the api_level of message.  Currently, only api_level \f(CW1\fR is
supported.  This will be used to check that messages are well-formed, and as
a hint to the Application as to which version of a method should fulfill a
\&\s-1REQUEST\s0 message.
.RE
.SS "OpenSRF::DomainObject::oilsMessage\->sender_locale( [$locale] );"
.IX Subsection "OpenSRF::DomainObject::oilsMessage->sender_locale( [$locale] );"
.RS 4
Sets or gets the current message locale hint.  Useful for telling the
server how you see the world.
.RE
.SS "OpenSRF::DomainObject::oilsMessage\->sender_ingress( [$ingress] );"
.IX Subsection "OpenSRF::DomainObject::oilsMessage->sender_ingress( [$ingress] );"
.RS 4
Sets or gets the current message ingress.  Useful for telling the
server how you entered the opensrf network.
.RE
.SS "OpenSRF::DomainObject::oilsMessage\->threadTrace( [$new_threadTrace] );"
.IX Subsection "OpenSRF::DomainObject::oilsMessage->threadTrace( [$new_threadTrace] );"
.RS 4
Sets or gets the current message sequence identifier, or thread trace number,
for a message.  Useful as a debugging aid, but that's about it.
.RE
.SS "OpenSRF::DomainObject::oilsMessage\->update_threadTrace"
.IX Subsection "OpenSRF::DomainObject::oilsMessage->update_threadTrace"
.RS 4
Increments the threadTrace component of a message.  This is automatic when
using the normal session processing stack.
.RE
.SS "OpenSRF::DomainObject::oilsMessage\->payload( [$new_payload] )"
.IX Subsection "OpenSRF::DomainObject::oilsMessage->payload( [$new_payload] )"
.RS 4
Sets or gets the payload of a message.  This should be exactly one object
of (sub)type domainObject or domainObjectCollection.
.RE
.ie n .SS "OpenSRF::DomainObject::oilsMessage\->handler( $session_id )"
.el .SS "OpenSRF::DomainObject::oilsMessage\->handler( \f(CW$session_id\fP )"
.IX Subsection "OpenSRF::DomainObject::oilsMessage->handler( $session_id )"
.RS 4
Used by the message processing stack to set session state information from the current
message, and then sends control (via the payload) to the Application layer.
.RE
